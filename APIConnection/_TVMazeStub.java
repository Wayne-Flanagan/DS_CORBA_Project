package APIConnection;


/**
* APIConnection/_TVMazeStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from API.idl
* 03 April 2016 19:45:53 o'clock IST
*/

public class _TVMazeStub extends org.omg.CORBA.portable.ObjectImpl implements APIConnection.TVMaze
{

  public void getShow (int id, APIConnection.Client client)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShow", true);
                $out.write_long (id);
                APIConnection.ClientHelper.write ($out, client);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getShow (id, client        );
            } finally {
                _releaseReply ($in);
            }
  } // getShow

  public void getShowEpisodeList (int id, APIConnection.Client client)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShowEpisodeList", true);
                $out.write_long (id);
                APIConnection.ClientHelper.write ($out, client);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getShowEpisodeList (id, client        );
            } finally {
                _releaseReply ($in);
            }
  } // getShowEpisodeList

  public void getShowSeasonsList (int id, APIConnection.Client client)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShowSeasonsList", true);
                $out.write_long (id);
                APIConnection.ClientHelper.write ($out, client);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getShowSeasonsList (id, client        );
            } finally {
                _releaseReply ($in);
            }
  } // getShowSeasonsList

  public void getShowCastList (int id, APIConnection.Client client)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShowCastList", true);
                $out.write_long (id);
                APIConnection.ClientHelper.write ($out, client);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getShowCastList (id, client        );
            } finally {
                _releaseReply ($in);
            }
  } // getShowCastList

  public void getShowEpisodesByNum (int id, int season, int num, APIConnection.Client client)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getShowEpisodesByNum", true);
                $out.write_long (id);
                $out.write_long (season);
                $out.write_long (num);
                APIConnection.ClientHelper.write ($out, client);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getShowEpisodesByNum (id, season, num, client        );
            } finally {
                _releaseReply ($in);
            }
  } // getShowEpisodesByNum

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:APIConnection/TVMaze:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _TVMazeStub
